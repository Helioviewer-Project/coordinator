name: Test and Deploy

on:
  push:
    branches: [ "main" ]
    tags:
      - v**
  pull_request:
    branches: [ "main" ]

jobs:
  # Run python lint jobs
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.12.3
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.3"
    - name: Install flake8 for linting
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
    # Ignore:
    # - E501: line too long (85 > 79 characters)
    #         black (by default) may force lines to be over the character limit
    - name: Run flake8 linter
      run: flake8 --ignore=E501
    - name: Run black code style checks
      run: black --check .


  # Run python tests
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.12.3
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.3"
    - name: Install dependencies
      run: |
        cd app
        python -m pip install --upgrade pip
        pip install pytest coverage
        pip install -r requirements.txt
    - name: Run pytest
      run: cd app && coverage run -m pytest .
    - name: Create code coverage report
      run: cd app && coverage html
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: app/htmlcov
        retention-days: 30


  # Build and push containers to docker
  docker:
    # Only build and push containers on version tags
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.3.0
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: app
        # List of metadata for an image
        labels: ${{ github.ref_name }},latest
        # List of target platforms for build
        platforms: linux/amd64,linux/arm64
        # List of tags
        tags: dgarciabriseno/hv-coordinator
        # Push to hub
        push: ${{ github.event_name == 'push' && github.ref_type == 'tag'}}

